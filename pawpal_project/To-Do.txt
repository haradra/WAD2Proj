Things to do:

---------------------------------------------------------------------------

PRIORITY

---------------------------------------------------------------------------

1. Upload to Pythonanywhere

2. Put animals in categories - Backend database? - Pets are identified by their "Species" field, in which the choice is (DOG, CAT, LIZARD, HAMSTER, REPTILE, BIRD) 

3. Display animals accordingly from the database

4. Link to messenger on each profile - Gosia

5. Presentation

6. Clean up register.html and editaccount.html, display one of two forms depending on which button is clicked, clean up JS code, then I'll add the map functionality to edit account

7. Display appropriate users in home page, Seekers for a logged in Pet, viceversa for logged in Seeker

8. Categorise animals on home page

---------------------------------------------------------------------------

Frontend

---------------------------------------------------------------------------

Make website responsive - it's done; only check for new additions

Think about what to add to home page.

My account display could be cleaned up, for example the description field takes up to 300 characters, will this be displayed nicely?

My account needs to display appropriate fields depending if the user is a Pet or Seeker, for example "species" field etc



---------------------------------------------------------------------------

Backend

---------------------------------------------------------------------------

When incorrect login details are typed we need to be redirected somewhere, instead of seeing new page etc.

When changing either first name or last name and leaving the other field blank, it changes that name to blank

Unit Testing

Connect pop script fields like description etc to user profile

Fix Github - will be fixed when deployed on pythonanywhere

Rating - front end too - when user gives rating, how should we handle it?
