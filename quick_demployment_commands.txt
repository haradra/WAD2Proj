Removing database, making and applying migrations, creating and admin account: admin, qweasdzxc

    rm db.sqlite3; rm -R pawpal/migrations; python3 manage.py makemigrations pawpal; python3 manage.py migrate; python3 population_script.py
    echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'qweasdzxc')" | python3 manage.py shell


Changing default to python3:
alias python='python3'
alias populate='rm db.sqlite3; rm -R pawpal/migrations; python3 manage.py makemigrations pawpal; python3 manage.py migrate; python3 population_script.py;'

GitHub useful instructions:
https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf

Messaging functionality:

    make migrations for chat server:
        python manage.py migrate django_private_chat

    run app:
        python manage.py runserver

    run message server:
        python manage.py run_chat_server

    messaging can be accessed from pawpal/dialogs/<username>

    You can talk to two different users (or to yourself) on the same machine by accessing:
        http://127.0.0.1:8000/pawpal/dialogs/user_name1
        http://localhost:8000/pawpal/dialogs/user_name2


FOOLPROOF git merge:
(on branch development)
git merge master
(resolve any merge conflicts if there are any)
git checkout master
(there won't be any conflicts now)
git merge development
